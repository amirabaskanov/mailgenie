// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id        String   @id @default(uuid())
  fullname  String
  clerkId   String
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  stripeId  String?


  billings  Billings[]
}

model Billings {
  id       String @id @default(uuid())
  plan     String
  credits  Int
  userId   String
  user     User   @relation(fields: [userId], references: [id])
}


enum Plans {
  STANDARD
  PRO
  ULTIMATE
}

model Campaign {
  id String @id @default(uuid())
  name String
  customers String[]
  userld String
  createdAt DateTime
}

model Domain {
  id      String @id @default(uuid())
  name    String
  icon    String
  userId  String
  compaignId  String
}

model Chatbot{
  id      String @id @default(uuid())
  welcomeMessage    String
  icon    String
  background String
  textColor String
  helpdesk  String
  domainId  String
  domain Domain @relation(fields: [domainId], references: [id])
}

model HelpDesk {
  id      String @id @default(uuid())
  question  String
  answer    String
  domainId  String
}

model ChatMessage{
  id      String @id @default(uuid())
  message String
  role  Role
  createdAt DateTime @default(now())
  updatedAt DateTime
  chatRoomId  String
  seen Boolean
}

model FilterQuestions{
  id       String      @id @default(uuid())
  name     String
  question String 
  answered String
  domainId String
}

model Customer{
  id       String      @id @default(uuid())
  email    String
  domainId String
}

model Product {
  id String @id @default(uuid())
  name String
  price Int
  description String
  createdAt DateTime
  domainId String
  domain Domain @relation(fields: [domainId], references: [id])
}

model Bookings {
  id String @id @default(uuid())
  date DateTime
  slot String
  email String
  customerId String
  customer Customer @relation(fields: [customerId], references: [id])
  domainId String
  domain Domain @relation(fields: [domainId], references: [id])
  createdAt DateTime
}

model Chatroom {
  id String @id @default(uuid())
  live Boolean
  mailed Boolean
  createdAt DateTime
  updatedAt DateTime
  customerId String
  customer Customer @relation(fields: [customerId], references: [id])
}